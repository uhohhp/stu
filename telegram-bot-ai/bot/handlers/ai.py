# bot/handlers/ai.py
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from ..services.ai_client import ask_ai
from ..services.utils import markdown_to_html

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —á–∞—Ç–∞
exit_kb = ReplyKeyboardMarkup([["‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"]], resize_keyboard=True)


async def ask_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é."""
    await update.message.reply_text(
        "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏.",
        reply_markup=exit_kb
    )
    context.user_data["ai_chat"] = True


async def ai_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤–æ –≤—Ä–µ–º—è –¥–∏–∞–ª–æ–≥–∞ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é."""
    user_text = update.message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏–ª –≤—ã–π—Ç–∏
    if user_text == "‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é":
        context.user_data["ai_chat"] = False
        from .start import main_kb
        await update.message.reply_text(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=main_kb
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤ —Ä–µ–∂–∏–º–µ –ª–∏ –º—ã —á–∞—Ç–∞
    if not context.user_data.get("ai_chat"):
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /ask, —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å.")
        return

    # –°–æ–æ–±—â–µ–Ω–∏–µ "–¥—É–º–∞—é..."
    waiting_msg = await update.message.reply_text("ü§î –î—É–º–∞—é –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º...")

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏
    answer = ask_ai(user_text)

    # –£–¥–∞–ª—è–µ–º "–¥—É–º–∞—é..."
    try:
        await waiting_msg.delete()
    except:
        pass

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∂–∏—Ä–Ω–æ–≥–æ/–∫—É—Ä—Å–∏–≤–∞/–∫–æ–¥–∞
    await update.message.reply_text(
        markdown_to_html(answer),
        parse_mode="HTML",
        reply_markup=exit_kb
    )